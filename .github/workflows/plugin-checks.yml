# Google Reviews Importer - Health Check Workflow
#
# This workflow automatically checks your Google Reviews Importer plugin for:
# 1. PHP compatibility
# 2. Google API connection
# 3. Any other potential issues
#
# HOW TO USE THIS FILE:
# 1. Place this file in the .github/workflows/ directory of your repository
# 2. Add your own credentials as GitHub repository secrets (see below)
# 3. The workflow will run monthly and on code changes
#
# REQUIRED SECRETS:
# You must set these in your repository settings (Settings > Secrets and variables > Actions)
# - GOOGLE_API_KEY: Your Google API key with Places API enabled
# - GOOGLE_PLACE_ID: Your business's Google Place ID
#
# OPTIONAL EMAIL NOTIFICATION SECRETS:
# Add these if you want to receive email alerts when issues are detected
# - MAIL_SERVER: Your SMTP server (e.g., smtp.gmail.com)
# - MAIL_PORT: SMTP port (e.g., 587)
# - MAIL_USERNAME: Email username
# - MAIL_PASSWORD: Email password or app password
# - NOTIFICATION_EMAIL: Email where you want to receive alerts

name: Plugin Health Check

on:
  schedule:
    - cron: '0 0 1 * *'  # Run on the 1st of every month
  push:
    branches: [ main ]  # Run when code is pushed to the main branch
  workflow_dispatch:    # Allow manual triggering

jobs:
  php-compatibility:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpcs, composer
          
      - name: Install PHP_CodeSniffer and PHPCompatibility
        run: |
          composer require --dev dealerdirect/phpcodesniffer-composer-installer
          composer require --dev phpcompatibility/php-compatibility
      
      - name: Check PHP Compatibility
        run: phpcs --standard=PHPCompatibility --runtime-set testVersion 7.4- *.php
  
  api-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      
      - name: Create API Test Script
        run: |
          echo "<?php
          // Simple script to test Google Places API connectivity
          
          // These values come from your GitHub repository secrets
          \$api_key = '${{ secrets.GOOGLE_API_KEY }}';  // REPLACE with your API key in repository secrets
          \$place_id = '${{ secrets.GOOGLE_PLACE_ID }}';  // REPLACE with your Place ID in repository secrets
          
          if (empty(\$api_key) || empty(\$place_id)) {
              echo \"Error: API key or Place ID not configured in GitHub secrets\\n\";
              exit(1);
          }
          
          \$url = \"https://maps.googleapis.com/maps/api/place/details/json?place_id={\$place_id}&fields=name&key={\$api_key}\";
          \$response = file_get_contents(\$url);
          \$data = json_decode(\$response, true);
          
          if (isset(\$data['status']) && \$data['status'] === 'OK') {
              echo \"API connection successful! Place name: {\$data['result']['name']}\\n\";
              exit(0);
          } else {
              echo \"API error: \" . (\$data['error_message'] ?? \$data['status'] ?? 'Unknown error') . \"\\n\";
              exit(1);
          }
          " > test-api.php
      
      - name: Run API Test Script
        run: php test-api.php
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_PLACE_ID: ${{ secrets.GOOGLE_PLACE_ID }}
        continue-on-error: true
      
  notify:
    needs: [php-compatibility, api-check]
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Send Email Notification
        # This step only runs if any of the previous jobs failed
        # You need to set up the email secrets for this to work
        uses: dawidd6/action-send-mail@v3
        with:
          # Replace these with your actual values in GitHub secrets
          server_address: ${{ secrets.MAIL_SERVER }}        # e.g., smtp.gmail.com
          server_port: ${{ secrets.MAIL_PORT }}             # e.g., 587
          username: ${{ secrets.MAIL_USERNAME }}            # Your email username
          password: ${{ secrets.MAIL_PASSWORD }}            # Your email password
          subject: "⚠️ Google Reviews Importer - Health Check Failed"
          body: |
            The monthly health check for the Google Reviews Importer plugin has detected issues.
            
            Please check the GitHub Actions logs for details:
            https://github.com/${{ github.repository }}/actions
            
            This is an automated message from your GitHub workflow.
          to: ${{ secrets.NOTIFICATION_EMAIL }}             # Where to send alerts
          from: GitHub Actions
